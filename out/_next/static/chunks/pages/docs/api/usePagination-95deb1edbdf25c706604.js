_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[18],{pGpo:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/api/usePagination",function(){return t("tbLL")}])},tbLL:function(e,a,t){"use strict";t.r(a),t.d(a,"meta",(function(){return p})),t.d(a,"default",(function(){return m}));var n=t("HALo"),i=t("dhJC"),l=t("q1tI"),b=t.n(l),o=t("7ljp"),r=t("er9C"),p=(b.a.createElement,{}),c={meta:p},s=function(e){var a=e.children,t=Object(i.a)(e,["children"]);return Object(o.b)(r.a,Object(n.a)({meta:p},t),a)};function m(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)(s,Object(n.a)({},c,t,{components:a,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"usepagination"},Object(o.b)("inlineCode",{parentName:"h1"},"usePagination"),Object(o.b)("a",Object(n.a)({parentName:"h1"},{href:"#usepagination",title:"Direct link to heading",className:"anchor"}),Object(o.b)("span",Object(n.a)({parentName:"a"},{className:"icon icon-link"})))),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Plugin Hook"),Object(o.b)("li",{parentName:"ul"},"Optional")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"usePagination")," is the hook that implements ",Object(o.b)("strong",{parentName:"p"},"row pagination"),". It can be used for both client-side pagination or server-side pagination. For more information on pagination, see Pagination"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"NOTE")," Some server-side pagination implementations do not use page index and instead use ",Object(o.b)("strong",{parentName:"p"},"token based pagination"),"! If that's the case, please use the ",Object(o.b)("inlineCode",{parentName:"p"},"useTokenPagination")," plugin instead.")),Object(o.b)("h3",{id:"table-options"},"Table Options",Object(o.b)("a",Object(n.a)({parentName:"h3"},{href:"#table-options",title:"Direct link to heading",className:"anchor"}),Object(o.b)("span",Object(n.a)({parentName:"a"},{className:"icon icon-link"})))),Object(o.b)("p",null,"The following options are supported via the main options object passed to ",Object(o.b)("inlineCode",{parentName:"p"},"useTable(options)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"initialState.pageSize: Int"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Required")),Object(o.b)("li",{parentName:"ul"},"Defaults to ",Object(o.b)("inlineCode",{parentName:"li"},"10")),Object(o.b)("li",{parentName:"ul"},"Determines the amount of rows on any given page"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"initialState.pageIndex: Int"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Required")),Object(o.b)("li",{parentName:"ul"},"Defaults to ",Object(o.b)("inlineCode",{parentName:"li"},"0")),Object(o.b)("li",{parentName:"ul"},"The index of the page that should be displayed via the ",Object(o.b)("inlineCode",{parentName:"li"},"page")," instance value"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"pageCount: Int"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Required if ",Object(o.b)("inlineCode",{parentName:"strong"},"manualPagination")," is set to ",Object(o.b)("inlineCode",{parentName:"strong"},"true"))),Object(o.b)("li",{parentName:"ul"},"If ",Object(o.b)("inlineCode",{parentName:"li"},"manualPagination")," is ",Object(o.b)("inlineCode",{parentName:"li"},"true"),", then this value used to determine the amount of pages available. This amount is then used to materialize the ",Object(o.b)("inlineCode",{parentName:"li"},"pageOptions")," and also compute the ",Object(o.b)("inlineCode",{parentName:"li"},"canNextPage")," values on the table instance."),Object(o.b)("li",{parentName:"ul"},"Set to ",Object(o.b)("inlineCode",{parentName:"li"},"-1")," if you don't know or don't want to present the number of pages available. ",Object(o.b)("inlineCode",{parentName:"li"},"canNextPage")," will return ",Object(o.b)("inlineCode",{parentName:"li"},"false")," if page data length is less than pageSize, otherwise ",Object(o.b)("inlineCode",{parentName:"li"},"true"),"."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"manualPagination: Bool"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Enables pagination functionality, but does not automatically perform row pagination."),Object(o.b)("li",{parentName:"ul"},"Turn this on if you wish to implement your own pagination outside of the table (eg. server-side pagination or any other manual pagination technique)"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"autoResetPage: Boolean"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Defaults to ",Object(o.b)("inlineCode",{parentName:"li"},"true")),Object(o.b)("li",{parentName:"ul"},"When ",Object(o.b)("inlineCode",{parentName:"li"},"true"),", the ",Object(o.b)("inlineCode",{parentName:"li"},"pageIndex")," state will automatically reset if ",Object(o.b)("inlineCode",{parentName:"li"},"manualPagination")," is ",Object(o.b)("inlineCode",{parentName:"li"},"false")," and any of the following conditions are met:",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"data")," is changed"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"manualSortBy")," is ",Object(o.b)("inlineCode",{parentName:"li"},"false")," and ",Object(o.b)("inlineCode",{parentName:"li"},"state.sortBy")," is changed"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"manualGlobalFilter")," is ",Object(o.b)("inlineCode",{parentName:"li"},"false")," and ",Object(o.b)("inlineCode",{parentName:"li"},"state.globalFilter")," is changed"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"manualFilters")," is ",Object(o.b)("inlineCode",{parentName:"li"},"false")," and ",Object(o.b)("inlineCode",{parentName:"li"},"state.filters")," is changed"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"manualGroupBy")," is ",Object(o.b)("inlineCode",{parentName:"li"},"false")," and ",Object(o.b)("inlineCode",{parentName:"li"},"state.groupBy")," is changed"))),Object(o.b)("li",{parentName:"ul"},"To disable, set to ",Object(o.b)("inlineCode",{parentName:"li"},"false")),Object(o.b)("li",{parentName:"ul"},"For more information see the FAQ ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"../faq#how-do-i-stop-my-table-state-from-automatically-resetting-when-my-data-changes"}),'"How do I stop my table state from automatically resetting when my data changes?"')))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"paginateExpandedRows: Bool"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Optional"),Object(o.b)("li",{parentName:"ul"},"Only applies when using the ",Object(o.b)("inlineCode",{parentName:"li"},"useExpanded")," plugin hook simultaneously"),Object(o.b)("li",{parentName:"ul"},"Defaults to ",Object(o.b)("inlineCode",{parentName:"li"},"true")),Object(o.b)("li",{parentName:"ul"},"If set to ",Object(o.b)("inlineCode",{parentName:"li"},"true"),", expanded rows are paginated along with normal rows. This results in stable page sizes across every page."),Object(o.b)("li",{parentName:"ul"},"If set to ",Object(o.b)("inlineCode",{parentName:"li"},"false"),", expanded rows will be spliced in after pagination. This means that the total number of rows in a page can potentially be larger than the page size, depending on how many subrows are expanded.")))),Object(o.b)("h3",{id:"instance-properties"},"Instance Properties",Object(o.b)("a",Object(n.a)({parentName:"h3"},{href:"#instance-properties",title:"Direct link to heading",className:"anchor"}),Object(o.b)("span",Object(n.a)({parentName:"a"},{className:"icon icon-link"})))),Object(o.b)("p",null,"The following values are provided to the table ",Object(o.b)("inlineCode",{parentName:"p"},"instance"),":"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"state.pageIndex: Int"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"This is the current ",Object(o.b)("inlineCode",{parentName:"li"},"pageIndex")," value, located on the state."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"state.pageSize: Int"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"This is the current ",Object(o.b)("inlineCode",{parentName:"li"},"pageSize")," value, located on the state."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"page: Array<row>"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"An array of rows for the ",Object(o.b)("strong",{parentName:"li"},"current")," page, determined by the current ",Object(o.b)("inlineCode",{parentName:"li"},"pageIndex")," value."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"pageCount: Int"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"If ",Object(o.b)("inlineCode",{parentName:"li"},"manualPagination")," is set to ",Object(o.b)("inlineCode",{parentName:"li"},"false"),", this is the total amount of pages available in the table based on the current ",Object(o.b)("inlineCode",{parentName:"li"},"pageSize")," value"),Object(o.b)("li",{parentName:"ul"},"if ",Object(o.b)("inlineCode",{parentName:"li"},"manualPagination")," is set to ",Object(o.b)("inlineCode",{parentName:"li"},"true"),", this is merely the same ",Object(o.b)("inlineCode",{parentName:"li"},"pageCount")," option that was passed in the table options."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"pageOptions: Array<Int>"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"An array of zero-based index integers corresponding to available pages in the table."),Object(o.b)("li",{parentName:"ul"},"This can be useful for generating things like select interfaces for the user to select a page from a list, instead of manually paginating to the desired page."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"canPreviousPage: Bool"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"If there are pages and the current ",Object(o.b)("inlineCode",{parentName:"li"},"pageIndex")," is greater than ",Object(o.b)("inlineCode",{parentName:"li"},"0"),", this will be ",Object(o.b)("inlineCode",{parentName:"li"},"true")))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"canNextPage:"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"If there are pages and the current ",Object(o.b)("inlineCode",{parentName:"li"},"pageIndex")," is less than ",Object(o.b)("inlineCode",{parentName:"li"},"pageCount"),", this will be ",Object(o.b)("inlineCode",{parentName:"li"},"true")))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"gotoPage: Function(pageIndex)"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"This function, when called with a valid ",Object(o.b)("inlineCode",{parentName:"li"},"pageIndex"),", will set ",Object(o.b)("inlineCode",{parentName:"li"},"pageIndex")," to that value."),Object(o.b)("li",{parentName:"ul"},"If the passed index is outside of the valid ",Object(o.b)("inlineCode",{parentName:"li"},"pageIndex")," range, then this function will do nothing."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"previousPage: Function"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"This function decreases ",Object(o.b)("inlineCode",{parentName:"li"},"state.pageIndex")," by one."),Object(o.b)("li",{parentName:"ul"},"If there are no pages or ",Object(o.b)("inlineCode",{parentName:"li"},"canPreviousPage")," is false, this function will do nothing."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"nextPage: Function"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"This function increases ",Object(o.b)("inlineCode",{parentName:"li"},"state.pageIndex")," by one."),Object(o.b)("li",{parentName:"ul"},"If there are no pages or ",Object(o.b)("inlineCode",{parentName:"li"},"canNextPage")," is false, this function will do nothing."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"setPageSize: Function(pageSize)"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"This function sets ",Object(o.b)("inlineCode",{parentName:"li"},"state.pageSize")," to the new value."),Object(o.b)("li",{parentName:"ul"},"As a result of a pageSize change, a new ",Object(o.b)("inlineCode",{parentName:"li"},"state.pageIndex")," is also calculated. It is calculated via ",Object(o.b)("inlineCode",{parentName:"li"},"Math.floor(currentTopRowIndex / newPageSize)"))))),Object(o.b)("h3",{id:"example"},"Example",Object(o.b)("a",Object(n.a)({parentName:"h3"},{href:"#example",title:"Direct link to heading",className:"anchor"}),Object(o.b)("span",Object(n.a)({parentName:"a"},{className:"icon icon-link"})))),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Basic Pagination",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/tannerlinsley/react-table/tree/v7/examples/pagination"}),"Source")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://codesandbox.io/s/github/tannerlinsley/react-table/tree/v7/examples/pagination"}),"Open in CodeSandbox")))),Object(o.b)("li",{parentName:"ul"},"Controlled Pagination",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/tannerlinsley/react-table/tree/v7/examples/pagination-controlled"}),"Source")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://codesandbox.io/s/github/tannerlinsley/react-table/tree/v7/examples/pagination-controlled"}),"Open in CodeSandbox"))))))}m.isMDXComponent=!0}},[["pGpo",0,2,1,3,4]]]);