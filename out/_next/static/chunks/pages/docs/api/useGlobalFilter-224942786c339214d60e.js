_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[15],{"94i8":function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/api/useGlobalFilter",function(){return a("ybb/")}])},"ybb/":function(e,t,a){"use strict";a.r(t),a.d(t,"meta",(function(){return c})),a.d(t,"default",(function(){return m}));var l=a("HALo"),n=a("dhJC"),i=a("q1tI"),b=a.n(i),o=a("7ljp"),r=a("er9C"),c=(b.a.createElement,{}),p={meta:c},s=function(e){var t=e.children,a=Object(n.a)(e,["children"]);return Object(o.b)(r.a,Object(l.a)({meta:c},a),t)};function m(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)(s,Object(l.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"useglobalfilter"},Object(o.b)("inlineCode",{parentName:"h1"},"useGlobalFilter"),Object(o.b)("a",Object(l.a)({parentName:"h1"},{href:"#useglobalfilter",title:"Direct link to heading",className:"anchor"}),Object(o.b)("span",Object(l.a)({parentName:"a"},{className:"icon icon-link"})))),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Plugin Hook"),Object(o.b)("li",{parentName:"ul"},"Optional")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"useGlobalFilter")," is the hook that implements ",Object(o.b)("strong",{parentName:"p"},"global row filtering")," \u2013 in other words, filtering based upon data that may be in ",Object(o.b)("em",{parentName:"p"},"any")," column in a given row. This is often useful as a free-text search across all columns simultaneously. It can be used in conjunction with ",Object(o.b)("inlineCode",{parentName:"p"},"useFilters"),", which involves filtering based upon data in ",Object(o.b)("em",{parentName:"p"},"specific")," columns. It is important to note that this hook can be used either ",Object(o.b)("strong",{parentName:"p"},"before or after")," ",Object(o.b)("inlineCode",{parentName:"p"},"useFilters"),", depending on the performance characteristics you want to code for."),Object(o.b)("h3",{id:"table-options"},"Table Options",Object(o.b)("a",Object(l.a)({parentName:"h3"},{href:"#table-options",title:"Direct link to heading",className:"anchor"}),Object(o.b)("span",Object(l.a)({parentName:"a"},{className:"icon icon-link"})))),Object(o.b)("p",null,"The following options are supported via the main options object passed to ",Object(o.b)("inlineCode",{parentName:"p"},"useTable(options)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"initialState.globalFilter: any"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Must be ",Object(o.b)("strong",{parentName:"li"},"memoized")),Object(o.b)("li",{parentName:"ul"},"The initial value of the global filter. This information is stored in state since the table is allowed to manipulate the filter through user interaction."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"globalFilter: String | Function(rows: Array<Row>, columnIds: Array<ColumnId: String>, globalFilterValue) => Rows[]"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Optional"),Object(o.b)("li",{parentName:"ul"},"Defaults to ",Object(o.b)("inlineCode",{parentName:"li"},"text")),Object(o.b)("li",{parentName:"ul"},"The resolved function from this option will be used to filter the table's data.",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"If a ",Object(o.b)("inlineCode",{parentName:"li"},"string")," is passed, the function with that name will be used from either the custom ",Object(o.b)("inlineCode",{parentName:"li"},"filterTypes")," table option (if specified) or used from the built-in filtering types object."),Object(o.b)("li",{parentName:"ul"},"If a ",Object(o.b)("inlineCode",{parentName:"li"},"function")," is passed:",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"It must be ",Object(o.b)("strong",{parentName:"li"},"memoized")),Object(o.b)("li",{parentName:"ul"},"It will be called directly with an array of ",Object(o.b)("inlineCode",{parentName:"li"},"rows")," to filter, an array of ",Object(o.b)("inlineCode",{parentName:"li"},"columnIds")," (being the column IDs that global filtering is being applied to), and ",Object(o.b)("inlineCode",{parentName:"li"},"globalFilterValue"),", being the current value of the global filter"),Object(o.b)("li",{parentName:"ul"},"It must return an ",Object(o.b)("inlineCode",{parentName:"li"},"Array")," of rows, being the remaining rows that have ",Object(o.b)("em",{parentName:"li"},"not")," been filtered out according to the ",Object(o.b)("inlineCode",{parentName:"li"},"globalFilterValue")," specified"))))))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"manualGlobalFilter: Bool"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Enables filter detection functionality, but does not automatically perform row filtering."),Object(o.b)("li",{parentName:"ul"},"Turn this on if you wish to implement your own row filter outside of the table (e.g. server-side or manual row grouping/nesting)"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"disableGlobalFilter: Bool"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Disables global filtering for every column in the entire table."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"filterTypes: Object<filterKey: filterType>"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Must be ",Object(o.b)("strong",{parentName:"li"},"memoized")),Object(o.b)("li",{parentName:"ul"},"Allows overriding or adding additional filter types for the table to use. If the ",Object(o.b)("inlineCode",{parentName:"li"},"globalFilter")," type isn't found on this object, the table will default to using the built-in filter types."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"autoResetGlobalFilter: Boolean"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Defaults to ",Object(o.b)("inlineCode",{parentName:"li"},"true")),Object(o.b)("li",{parentName:"ul"},"When ",Object(o.b)("inlineCode",{parentName:"li"},"true"),", the ",Object(o.b)("inlineCode",{parentName:"li"},"globalFilter")," state will automatically reset if any of the following conditions are met:",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"data")," is changed"))),Object(o.b)("li",{parentName:"ul"},"To disable, set to ",Object(o.b)("inlineCode",{parentName:"li"},"false")),Object(o.b)("li",{parentName:"ul"},"For more information see the FAQ ",Object(o.b)("a",Object(l.a)({parentName:"li"},{href:"../faq#how-do-i-stop-my-table-state-from-automatically-resetting-when-my-data-changes"}),'"How do I stop my table state from automatically resetting when my data changes?"'))))),Object(o.b)("h3",{id:"column-options"},"Column Options",Object(o.b)("a",Object(l.a)({parentName:"h3"},{href:"#column-options",title:"Direct link to heading",className:"anchor"}),Object(o.b)("span",Object(l.a)({parentName:"a"},{className:"icon icon-link"})))),Object(o.b)("p",null,"The following options are supported on any ",Object(o.b)("inlineCode",{parentName:"p"},"Column")," object passed to the ",Object(o.b)("inlineCode",{parentName:"p"},"columns")," option in ",Object(o.b)("inlineCode",{parentName:"p"},"useTable()"),":"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"disableGlobalFilter: Bool"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Optional"),Object(o.b)("li",{parentName:"ul"},"If set to ",Object(o.b)("inlineCode",{parentName:"li"},"true"),", global filtering will be disabled for this column")))),Object(o.b)("h3",{id:"instance-properties"},"Instance Properties",Object(o.b)("a",Object(l.a)({parentName:"h3"},{href:"#instance-properties",title:"Direct link to heading",className:"anchor"}),Object(o.b)("span",Object(l.a)({parentName:"a"},{className:"icon icon-link"})))),Object(o.b)("p",null,"The following values are provided to the table ",Object(o.b)("inlineCode",{parentName:"p"},"instance"),":"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"state.globalFilter: String"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The current ",Object(o.b)("inlineCode",{parentName:"li"},"globalFilter")," value, located on the state object."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"rows: Array<Row>"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"An array of ",Object(o.b)("strong",{parentName:"li"},"filtered")," rows."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"preGlobalFilteredRows: Array<Row>"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The array of rows ",Object(o.b)("strong",{parentName:"li"},"used right before filtering"),"."),Object(o.b)("li",{parentName:"ul"},"Among many other use-cases, these rows are directly useful for displaying the total number of available rows and building option lists in filters, since the resulting filtered ",Object(o.b)("inlineCode",{parentName:"li"},"rows")," do not contain every possible option."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"setGlobalFilter: Function(filterValue) => void"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"An instance-level function used to update the global filter value.")))),Object(o.b)("h3",{id:"example"},"Example",Object(o.b)("a",Object(l.a)({parentName:"h3"},{href:"#example",title:"Direct link to heading",className:"anchor"}),Object(o.b)("span",Object(l.a)({parentName:"a"},{className:"icon icon-link"})))),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(l.a)({parentName:"li"},{href:"https://github.com/tannerlinsley/react-table/tree/v7/examples/filtering"}),"Source")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(l.a)({parentName:"li"},{href:"https://codesandbox.io/s/github/tannerlinsley/react-table/tree/v7/examples/filtering"}),"Open in CodeSandbox"))))}m.isMDXComponent=!0}},[["94i8",0,2,1,3,4]]]);